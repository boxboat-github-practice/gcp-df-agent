name: "test-env"
on:
  workflow_dispatch:

jobs:
  preprare:
    name: Collect environment name from branch name
    runs-on: ubuntu-latest
    steps:
      - name: Some check on branch
        id: branch_check
        run: |
          echo "Running on branch ${{ github.ref }}"
          if [ "${{ github.ref }}" = "refs/heads/master" ]; then
              echo "{env_name}={PROD}" >> $GITHUB_OUTPUT
          elif [ "${{ github.ref }}" = "refs/heads/production" ]; then
              echo "{env_name}={PROD}" >> $GITHUB_OUTPUT
              echo "::set-output name=env_name::DEV"
          elif [ "${{ github.ref }}" = "refs/heads/staging" ]; then
              echo "::set-output name=env_name::QA"
          elif [ "${{ github.ref }}" = "refs/heads/development" ]; then
              echo "::set-output name=env_name::DEV"
          else
              echo "::set-output name=env_name::DEV"
          fi
  job1:
    runs-on: ubuntu-latest
    outputs:
      output1: ${{ steps.step1.outputs.test }}
      output2: ${{ steps.step2.outputs.test }}
    steps:
      - id: step1
        run: echo "test=hello" >> "$GITHUB_OUTPUT"
      - id: step2
        run: echo "test=world" >> "$GITHUB_OUTPUT"
  job2:
    runs-on: ubuntu-latest
    needs: job1
    steps:
      - env:
          OUTPUT1: ${{needs.job1.outputs.output1}}
          OUTPUT2: ${{needs.job1.outputs.output2}}
        run: echo "$OUTPUT1 $OUTPUT2"

      - name: Use variable setup in previous step
        run: echo "I'm using variable ${{ steps.branch_check.outputs.env_name }}"
    outputs:
      env_name: ${{ steps.branch_check.outputs.env_name }}

  # validate:
  # needs: [ preprare ]
  # runs-on: ubuntu-latest
  # environment:
  #   name: ${{ needs.preprare.outputs.env_name }}
  # name: "Printing previous step output"
  # steps:
  # - name: Extract branch name
  #   shell: bash
  #   run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}"
  #   id: extract_branch
  # - name: echo
  #   shell: bash
  #   run: |
  #     echo "HOME: ${HOME}"
  #     echo "GITHUB_WORKFLOW: ${GITHUB_WORKFLOW}"
  #     echo "GITHUB_REF_NAME: ${GITHUB_REF_NAME}"
  #     echo "TEST_VALUE: ${TEST}"
  #     echo "TEST_1 TEST_VALUE: ${TEST_1}"
  #   env:
  #     TEST: ${{ vars.TEST }}
  #     TEST_1: ${{ needs.preprare.outputs.env_name }}

  # - name: Checkout
  #   uses: actions/checkout@v3
  # - name: Terraform validate
  #   uses: dflook/terraform-validate@v1
  #   id: validate
